apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization
commonLabels:
  # commonLabels must have at least one unique label
  # per environment to ensure selectors are applied correctly
  app.kubernetes.io/instance: staging
bases:
  - ../../base/passport-status-api/
  - ../../base/passport-status-db/
  - ../../base/passport-status-db-cn/
  - ../../base/passport-status-frontend/
  - ../../base/passport-status-maintenance/
images:
  - name: dtsrhpdevscedacr.azurecr.io/passport-status
    newTag: 20241118-532-10933aec
  - name: dtsrhpdevscedacr.azurecr.io/passport-status-api
    newTag: 20241011-00007-f9ea9661
  - name: dtsrhpdevscedacr.azurecr.io/passport-status-maintenance
    newTag: 20230106-12-e434d1d5
namespace: passport-status-preprod
nameSuffix: -staging
patchesStrategicMerge:
  - ./passport-status-api-configmaps.yaml
  - ./passport-status-api-deployments.yaml
  - ./passport-status-frontend-configmaps.yaml
  - ./passport-status-frontend-deployments.yaml
  - ./passport-status-maintenance-deployments.yaml
resources:
  - ./artemis-deployments.yaml
  - ./artemis-security-deployments.yaml
  - ./external-secrets.yaml
  - ./passport-status-api-hpas.yaml
  - ./passport-status-api-ingresses.yaml
  - ./passport-status-frontend-hpas.yaml
  - ./passport-status-frontend-ingresses.yaml
secretGenerator:
  - name: passport-status-api
    envs:
      - ./.env.api.secret
patches:
  - target:
      kind: PostgresCluster
      name: passport-status-db
    patch: |-
      - op: replace
        path: /spec/instances/0/replicas
        value: 1
      - op: replace
        path: /spec/instances/0/dataVolumeClaimSpec/resources/requests/storage
        value: 256Gi
      - op: replace
        path: /spec/backups/pgbackrest/repos/0/volume/volumeClaimSpec/resources/requests/storage
        value: 256Gi
      - op: replace
        path: /spec/backups/pgbackrest/global/repo1-retention-full
        value: '2' 
      - op: replace
        path: /spec/backups/pgbackrest/repos/0/schedules/full
        value: '0 0/12 * * *'
      - op: add 
        path: /spec/backups/pgbackrest/jobs
        value:
          resources:
            requests:
              cpu: 250m
            limits:
              cpu: 500m
      - op: replace
        path: /spec/instances/0/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecution/0/podAffinityTerm/labelSelector/matchLabels/postgres-operator.crunchydata.com~1cluster
        value: passport-status-db-staging
      - op: replace
        path: /spec/proxy/pgBouncer/affinity/podAntiAffinity/preferredDuringSchedulingIgnoredDuringExecution/0/podAffinityTerm/labelSelector/matchLabels/postgres-operator.crunchydata.com~1cluster
        value: passport-status-db-staging
      - op: replace
        path: /spec/databaseInitSQL/name
        value: passport-status-db-staging
  - target:
      kind: Cluster
      name: passport-status-db-cn
    patch: |-
      - op: replace
        path: /spec/instances
        value: 1
      - op: replace
        path: /spec/storage/size
        value: 64Gi
      - op: add 
        path: /spec/bootstrap/initdb
        value:
          import:
            type: monolith
            databases:
              - passport-status
            roles:
              - '*'
            source:
              externalCluster: passport-status-db
      - op: add
        path: /spec/postgresql
        value:
          shared_preload_libraries:
            - pgaudit
      - op: add
        path: /spec/externalClusters
        value:
          - name: passport-status-db 
            connectionParameters:
              # Use the correct IP or host name for the source database
              host: passport-status-db-staging-primary.passport-status-preprod.svc.cluster.local
              user: postgres 
              dbname: passport-status 
              sslmode: require
            password:
              name: postgres-passport-staging-cn-crunchy-import 
              key: pg-user-password
